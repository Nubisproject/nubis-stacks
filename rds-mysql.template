{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "RDS Stack with; DBInstance, SecurityGroup and DBSubnetGroup",
  "Parameters": {
    "StackName": {
      "Description": "Name of the parent stack",
      "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9-]{0,254}$",
      "ConstraintDescription": "A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 255 characters.",
      "Type": "String"
    },
    "ServiceName": {
      "Description": "The name of the service this belongs to",
      "AllowedPattern": "^[a-z0-9][a-z0-9-.]*$",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String",
      "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
      "ConstraintDescription": "Must be a valid email address."
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "admin",
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, stage, or sandbox."
    },
    "AllocatedStorage": {
      "Description": "Name of this deployment",
      "Type": "String",
      "AllowedPattern": "^[5-9]|[1-9][0-9]{1,2}|[12][0-9]{3}|30[0-6][0-9]|307[0-2]$",
      "ConstraintDescription": "Must be an integer from 5 to 3072."
    },
    "DBInstanceClass": {
      "Description": "Name of this deployment",
      "Type": "String",
      "AllowedValues": [
        "db.t1.micro",
        "db.m1.small",
        "db.m1.medium",
        "db.m1.large",
        "db.m1.xlarge",
        "db.m2.xlarge",
        "db.m2.2xlarge",
        "db.m2.4xlarge",
        "db.m3.medium",
        "db.m3.large",
        "db.m3.xlarge",
        "db.m3.2xlarge",
        "db.r3.large",
        "db.r3.xlarge",
        "db.r3.2xlarge",
        "db.r3.4xlarge",
        "db.r3.8xlarge",
        "db.t2.micro",
        "db.t2.small",
        "db.t2.medium"
      ],
      "ConstraintDescription": "Must specify a valid instance class."
    },
    "DBName": {
      "Description": "Name of this deployment",
      "Type": "String",
      "AllowedPattern": "[a-zA-Z0-9_]{1,64}",
      "ConstraintDescription": "Must only contain upper and lower case letters and numbers, between 1 and 64 characters."
    },
    "EC2SecurityGroup": {
      "Description": "EC2SecurityGroup id",
      "AllowedPattern": "^sg-[0-9a-f]{8}$",
      "Type": "String"
    },
    "MasterUsername": {
      "Description": "Database Master Username",
      "AllowedPattern": "[a-zA-Z][a-zA-Z0-9]{0,15}",
      "Type": "String",
      "Default": "provisioner",
      "ConstraintDescription": "Must contain 1 to 16 alphanumeric characters. First character must be a letter."
    },
    "ReadOnlySlave": {
      "Description": "Create a read-only slave database",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Type": "String",
      "Default": "false"
    },
    "SSHKeyName": {
      "Description": "Existing ssh key to deploy to instances",
      "Type": "String",
      "Default": "nubis"
    },
    "DBStorageType": {
      "Description": "Storage Type for the database, one of standard (magnetic) or gp2 (SSD)",
      "Type": "String",
      "Default": "standard",
      "AllowedValues": [
        "standard",
        "gp2"
      ]
    },
    "AdminHost": {
      "Description": "Create an administrative host",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Type": "String",
      "Default": "true"
    },
    "DBParameterGroupName": {
      "Description": "Name of the DB Parameter Group to use",
      "Type": "String",
      "Default": ""
    },
    "StacksVersion": {
      "Description": "Version of the Nubis Stacks",
      "Type": "String",
      "Default": "v1.4.0-dev"
    }
  },
  "Mappings": {
    "AdminHostAMIs": {
      "us-west-2": {
        "AMI": "ami-e4dc1784"
      },
      "us-east-1": {
        "AMI": "ami-d6f56bc1"
      }
    }
  },
  "Conditions": {
    "WithDBParameterGroupName": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "DBParameterGroupName"
            },
            ""
          ]
        }
      ]
    },
    "WithReadOnlySlave": {
      "Fn::Equals": [
        {
          "Ref": "ReadOnlySlave"
        },
        "true"
      ]
    },
    "WithAdminHost": {
      "Fn::Equals": [
        {
          "Ref": "AdminHost"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "VpcInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "StacksVersion": {
          "Ref": "StacksVersion"
        },
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupNestedStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              "vpc"
            ]
          ]
        },
        "SearchString": {
          "Ref": "Environment"
        }
      }
    },
    "MetaInfo": {
      "Type": "Custom::MetaInfo",
      "Properties": {
        "StacksVersion": {
          "Ref": "StacksVersion"
        },
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupNestedStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              "vpc"
            ]
          ]
        },
        "SearchString": "VPCMeta"
      }
    },
    "RDSInstanceSlave": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "WithReadOnlySlave",
      "Properties": {
        "SourceDBInstanceIdentifier": {
          "Ref": "RDSInstance"
        },
        "AllocatedStorage": {
          "Ref": "AllocatedStorage"
        },
        "StorageType": {
          "Ref": "DBStorageType"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBParameterGroupName": {
          "Fn::If": [
            "WithDBParameterGroupName",
            {
              "Ref": "DBParameterGroupName"
            },
            {
              "Fn::GetAtt": [
                "MetaInfo",
                "NubisMySQL56ParameterGroup"
              ]
            }
          ]
        },
        "VPCSecurityGroups": [
          {
            "Ref": "RDSSecurityGroup"
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Database Instance"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          },
          {
            "Key": "RDS",
            "Value": "Slave"
          }
        ]
      }
    },
    "RDSInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AllocatedStorage": {
          "Ref": "AllocatedStorage"
        },
        "StorageType": {
          "Ref": "DBStorageType"
        },
        "DBInstanceClass": {
          "Ref": "DBInstanceClass"
        },
        "DBParameterGroupName": {
          "Fn::If": [
            "WithDBParameterGroupName",
            {
              "Ref": "DBParameterGroupName"
            },
            {
              "Fn::GetAtt": [
                "MetaInfo",
                "NubisMySQL56ParameterGroup"
              ]
            }
          ]
        },
        "DBSubnetGroupName": {
          "Ref": "RDSSubnetGroup"
        },
        "Engine": "mysql",
        "EngineVersion": "5.6.22",
        "MultiAZ": "true",
        "BackupRetentionPeriod": "7",
        "VPCSecurityGroups": [
          {
            "Ref": "RDSSecurityGroup"
          }
        ],
        "MasterUsername": {
          "Ref": "MasterUsername"
        },
        "MasterUserPassword": "provisioner_password",
        "DBName": {
          "Ref": "DBName"
        },
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Database Instance"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      },
      "DeletionPolicy": "Snapshot"
    },
    "RDSSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "DB Subnet Group",
        "SubnetIds": [
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ1"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ2"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ3"
            ]
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Database Subnet Group"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    },
    "RDSSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "VpcId"
          ]
        },
        "SecurityGroupIngress": {
          "SourceSecurityGroupId": {
            "Ref": "EC2SecurityGroup"
          },
          "IpProtocol": "tcp",
          "FromPort": "3306",
          "ToPort": "3306"
        },
        "GroupDescription": "Front end instance access",
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Database Security Group"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    },
    "EC2StackAdmin": {
      "Type": "AWS::CloudFormation::Stack",
      "Condition": "WithAdminHost",
      "Properties": {
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              "https://s3.amazonaws.com/nubis-stacks",
              {
                "Ref": "StacksVersion"
              },
              "ec2.template"
            ]
          ]
        },
        "TimeoutInMinutes": "60",
        "Parameters": {
          "StackName": {
            "Ref": "StackName"
          },
          "ServiceName": {
            "Ref": "ServiceName"
          },
          "TechnicalOwner": {
            "Ref": "TechnicalOwner"
          },
          "Environment": {
            "Ref": "Environment"
          },
          "AmiId": {
            "Fn::FindInMap": [
              "AdminHostAMIs",
              {
                "Ref": "AWS::Region"
              },
              "AMI"
            ]
          },
          "SSHKeyName": {
            "Ref": "SSHKeyName"
          },
          "Purpose": "db-admin",
          "SecurityGroup": {
            "Ref": "EC2SecurityGroup"
          },
          "InstanceType": "t2.nano"
        }
      }
    }
  },
  "Outputs": {
    "RDSEndpoint": {
      "Description": "Database endpoint",
      "Value": {
        "Fn::GetAtt": [
          "RDSInstance",
          "Endpoint.Address"
        ]
      }
    },
    "RDSName": {
      "Description": "Database name",
      "Value": {
        "Ref": "DBName"
      }
    },
    "RDSUser": {
      "Description": "Database user",
      "Value": {
        "Ref": "MasterUsername"
      }
    },
    "SlaveRDSEndpoint": {
      "Condition": "WithReadOnlySlave",
      "Description": "Database endpoint",
      "Value": {
        "Fn::GetAtt": [
          "RDSInstanceSlave",
          "Endpoint.Address"
        ]
      }
    }
  }
}
