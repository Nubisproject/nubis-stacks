{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "Creates an ELB with a security group",
  "Parameters" : {
    "ServiceName": {
      "Description": "The name of the service this belongs to",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "prod",
        "dev",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, dev, or sandbox."
    },
    "ElbHealthTarget": {
      "Description": "The protocol and url to use for checking the health of the service",
      "Type": "String"
    }
  },
  "Resources": {
    "VpcInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "ServiceToken": { "Fn::Join": [ "", [ "arn:aws:lambda:", { "Ref": "AWS::Region" }, ":", { "Ref": "AWS::AccountId" }, ":function:", "LookupStackOutputs" ] ] },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "Environment"
              },
              "vpc"
            ]
          ]
        }
      }
    },
    "ELBSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inbound ELB traffic rules",
        "VpcId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "VpcId"
          ]
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "443",
            "ToPort": "443",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Load Balancer Security Group"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    },
    "ELB": {
      "Type": "AWS::ElasticLoadBalancing::LoadBalancer",
      "Properties": {
        "Subnets": [
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PublicSubnetAZ1"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PublicSubnetAZ2"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PublicSubnetAZ3"
            ]
          }
        ],
        "SecurityGroups": [
          {
            "Ref": "ELBSecurityGroup"
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "InternetAccessSecurityGroupId"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "SharedServicesSecurityGroupId"
            ]
          }
        ],
        "CrossZone": true,
        "Listeners": [
          {
            "InstancePort": "80",
            "InstanceProtocol": "HTTP",
            "LoadBalancerPort": "80",
            "Protocol": "HTTP"
          }
        ],
        "HealthCheck": {
          "HealthyThreshold": "2",
          "UnhealthyThreshold": "2",
          "Timeout": "3",
          "Target": {
            "Ref": "ElbHealthTarget"
          },
          "Interval": "30"
        },
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Web Load Balancer"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    }
  },
  "Outputs": {
    "DNSName": {
      "Description": "ELB CNAME",
      "Value": {
        "Fn::GetAtt": [
          "ELB",
          "DNSName"
        ]
      }
    },
    "ELB": {
      "Description": "ELB Id",
      "Value": {
          "Ref": "ELB"
      }
    }
  }
}