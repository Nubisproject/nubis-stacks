{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Proxy with autoscaling for nubis VPCs.",
  "Parameters": {
    "StackName": {
      "Description": "Name of the parent stack",
      "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9-]{0,254}$",
      "ConstraintDescription": "A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 255 characters.",
      "Type": "String"
    },
    "ServiceName": {
      "Description": "Name of the service",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "StacksVersion": {
      "Description": "Version of Nubis Stacks to use",
      "Type": "String",
      "Default": "v1.0.1"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "admin",
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify admin, prod, stage, or sandbox."
    },
    "SSHKeyName": {
      "Description": "Existing ssh key to deploy to EC2 instances",
      "Type": "String"
    },
    "VpcId": {
      "Description": "The ID of the VPC we are deploying into",
      "Type": "String"
    },
    "SshSecurityGroupId": {
      "Description": "ID of the ssh security group",
      "Type": "String"
    },
    "InternetAccessSecurityGroupId": {
      "Description": "ID of the internet access security group",
      "Type": "String"
    },
    "SharedServicesSecurityGroupId": {
      "Description": "ID of the shared services security group",
      "Type": "String"
    },
    "InstanceType": {
      "Description": "EC2 Instance type",
      "Type": "String",
      "Default": "m3.medium",
      "AllowedValues": [
        "t2.micro",
        "t2.small",
        "t2.medium",
        "t2.large",
        "m4.large",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m3.medium",
        "m3.large",
        "m3.xlarge",
        "m3.2xlarge",
        "c4.large",
        "c4.xlarge",
        "c4.2xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c3.large",
        "c3.xlarge",
        "c3.2xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "r3.large",
        "r3.xlarge",
        "r3.2xlarge",
        "r3.4xlarge",
        "r3.8xlarge",
        "i2.xlarge",
        "i2.2xlarge",
        "i2.4xlarge",
        "i2.8xlarge",
        "d2.xlarge",
        "d2.2xlarge",
        "d2.4xlarge",
        "d2.8xlarge",
        "g2.2xlarge",
        "g2.8xlarge"
      ],
      "NoEcho": "true"
    },
    "NubisDomain": {
      "Description": "The domain used to discover the consul endpoint",
      "Default": "nubis.allizom.org",
      "AllowedPattern": "^[0-9a-z\\-\\.]+$",
      "Type": "String"
    },
    "ConsulToken": {
      "Description": "Optionnal ACL Token for Consul",
      "Type": "String",
      "Default": "anonymous",
      "NoEcho": "true"
    },
    "VPCServiceName": {
      "Description": "",
      "Type": "String"
    },
    "PrivateSubnetAZ1": {
      "Description": "The first availability zone we are deploying into",
      "Type": "String"
    },
    "PrivateSubnetAZ2": {
      "Description": "The second availability zone we are deploying into",
      "Type": "String"
    },
    "PrivateSubnetAZ3": {
      "Description": "The third availability zone we are deploying into",
      "Type": "String"
    },
    "AutoScalingGroupMinSize": {
      "Description": "Minimum size of autoscaling group",
      "Type": "String",
      "AllowedPattern": "^[0-9]+$",
      "Default": "2"
    },
    "AutoScalingGroupDesiredCapacity": {
      "Description": "Desired capacity autoscaling group",
      "Type": "String",
      "AllowedPattern": "^[0-9]+$",
      "Default": "2"
    },
    "AutoScalingGroupMaxSize": {
      "Description": "Max size of autoscaling group",
      "Type": "String",
      "AllowedPattern": "^[0-9]+$",
      "Default": "3"
    },
    "CPUAlarmHighThreshold": {
      "Description": "Overall cluster CPU usage by percentage where we trigger a scale up action.",
      "Type": "String",
      "Default": "70"
    },
    "CPUAlarmLowThreshold": {
      "Description": "Overall cluster CPU usage by percentage where we trigger a scale down action.",
      "Type": "String",
      "Default": "40"
    }
  },
  "Mappings": {
    "AMIs": {
      "us-east-1": {
        "AMI": "ami-a74c3ccd"
      },
      "us-west-2": {
        "AMI": "ami-31061250"
      }
    }
  },
  "Resources": {
    "EC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inbound traffic rules",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "SourceSecurityGroupId": {
              "Ref": "SshSecurityGroupId"
            }
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "3128",
            "ToPort": "3128",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Web Server Security Group"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "AMIs",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "EC2SecurityGroup"
          },
          {
            "Ref": "InternetAccessSecurityGroupId"
          },
          {
            "Ref": "SharedServicesSecurityGroupId"
          },
          {
            "Ref": "SshSecurityGroupId"
          }
        ],
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_STACK='",
                      {
                        "Ref": "StackName"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_PROJECT='",
                      {
                        "Ref": "ServiceName"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_ENVIRONMENT='",
                      {
                        "Ref": "Environment"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_DOMAIN='",
                      {
                        "Ref": "NubisDomain"
                      },
                      "'"
                    ]
                  ]
                },
                "NUBIS_MIGRATE='1'",
                {
                  "Fn::Join": [
                    "",
                    [
                      "CONSUL_ACL_TOKEN='",
                      {
                        "Ref": "ConsulToken"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_ACCOUNT='",
                      {
                        "Ref": "VPCServiceName"
                      },
                      "'"
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": "true"
        },
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "false",
          "PauseTime": "PT1M"
        }
      },
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Ref": "PrivateSubnetAZ1"
          },
          {
            "Ref": "PrivateSubnetAZ2"
          },
          {
            "Ref": "PrivateSubnetAZ3"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": {
          "Ref": "AutoScalingGroupMinSize"
        },
        "DesiredCapacity": {
          "Ref": "AutoScalingGroupDesiredCapacity"
        },
        "MaxSize": {
          "Ref": "AutoScalingGroupMaxSize"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ServiceName"
                  },
                  "(",
                  {
                    "Ref": "Environment"
                  },
                  ")"
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Purpose",
            "Value": "Proxy Server",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Backups",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Shutdown",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "ScaleUpPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "1"
      }
    },
    "ScaleDownPolicy": {
      "Type": "AWS::AutoScaling::ScalingPolicy",
      "Properties": {
        "AdjustmentType": "ChangeInCapacity",
        "AutoScalingGroupName": {
          "Ref": "AutoScalingGroup"
        },
        "Cooldown": "60",
        "ScalingAdjustment": "-1"
      }
    },
    "CPUAlarmHigh": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "2",
        "Statistic": "Average",
        "Threshold": {
          "Ref": "CPUAlarmHighThreshold"
        },
        "AlarmDescription": "Alarm if cpu too high or metric disappears indicating instance is down",
        "Period": "60",
        "AlarmActions": [
          {
            "Ref": "ScaleUpPolicy"
          }
        ],
        "Namespace": "AWS/EC2",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "AutoScalingGroup"
            }
          }
        ],
        "ComparisonOperator": "GreaterThanThreshold",
        "MetricName": "CPUUtilization"
      }
    },
    "CPUAlarmLow": {
      "Type": "AWS::CloudWatch::Alarm",
      "Properties": {
        "EvaluationPeriods": "2",
        "Statistic": "Average",
        "Threshold": {
          "Ref": "CPUAlarmLowThreshold"
        },
        "AlarmDescription": "Alarm if cpu too low",
        "Period": "60",
        "AlarmActions": [
          {
            "Ref": "ScaleDownPolicy"
          }
        ],
        "Namespace": "AWS/EC2",
        "Dimensions": [
          {
            "Name": "AutoScalingGroupName",
            "Value": {
              "Ref": "AutoScalingGroup"
            }
          }
        ],
        "ComparisonOperator": "LessThanThreshold",
        "MetricName": "CPUUtilization"
      }
    }
  }
}
