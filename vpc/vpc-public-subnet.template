{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "3 public subnets across 3 availability zones in a VPC",
  "Parameters": {
    "VpcId": {
      "Description": "The VPC ID to attach this vpn onto.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "ServiceName": {
      "Description": "Name of this deployment",
      "AllowedPattern": "^[a-z0-9][a-z0-9-.]*$",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
      "Type": "String"
    },
    "Environment": {
      "Description": "The name of the environment we are deploying into: sandbox, stage, or production.",
      "Type": "String",
      "AllowedValues": [
        "sandbox",
        "stage",
        "prod",
        "admin"
      ],
      "Default": "sandbox",
      "ConstraintDescription": "Must be one of these types of Mozilla VPCs"
    },
    "PublicSubnetAZ1Cidr": {
      "Description": "The CIDR for the Public Subnet in Availability Zone 1.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "AllowedPattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "PublicSubnetAZ2Cidr": {
      "Description": "The CIDR for the Public Subnet in Availability Zone 2.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "AllowedPattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "PublicSubnetAZ3Cidr": {
      "Description": "The CIDR for the Public Subnet in Availability Zone 3.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "AllowedPattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "StacksVersion": {
      "Description": "Version of the Nubis Stacks",
      "Type": "String",
      "Default": "v1.4.0-dev"
    }
  },
  "Resources": {
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "InternetGateway"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": "InternetGateway",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicRouteTable"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "DefaultRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "InternetGatewayAttachment",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetAZ1": {
      "Type": "AWS::EC2::Subnet",
      "Metadata": {
        "update_key": "0001"
      },
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetAZ1Cidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnetAZ1"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PublicSubnetAZ2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetAZ2Cidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnetAZ2"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PublicSubnetAZ3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetAZ3Cidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PublicSubnetAZ3"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PublicSubnetAZ1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetAZ1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetAZ2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetAZ2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetAZ3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnetAZ3"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    }
  },
  "Outputs": {
    "PublicRouteTable": {
      "Value": {
        "Ref": "PublicRouteTable"
      }
    },
    "PublicSubnetAZ1": {
      "Value": {
        "Ref": "PublicSubnetAZ1"
      }
    },
    "PublicSubnetAZ2": {
      "Value": {
        "Ref": "PublicSubnetAZ2"
      }
    },
    "PublicSubnetAZ3": {
      "Value": {
        "Ref": "PublicSubnetAZ3"
      }
    },
    "PublicAvailabilityZone1": {
      "Value": {
        "Fn::GetAtt": [
          "PublicSubnetAZ1",
          "AvailabilityZone"
        ]
      }
    },
    "PublicAvailabilityZone2": {
      "Value": {
        "Fn::GetAtt": [
          "PublicSubnetAZ2",
          "AvailabilityZone"
        ]
      }
    },
    "PublicAvailabilityZone3": {
      "Value": {
        "Fn::GetAtt": [
          "PublicSubnetAZ3",
          "AvailabilityZone"
        ]
      }
    }
  }
}
