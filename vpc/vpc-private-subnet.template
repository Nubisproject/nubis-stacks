{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "3 private subnets and 3 NATs across 3 availability zones in a VPC",
  "Parameters": {
    "VpcId": {
      "Description": "The VPC ID we are deploying assets into.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "ServiceName": {
      "Description": "Name of this deployment",
      "AllowedPattern": "^[a-z0-9][a-z0-9-.]*$",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
      "Type": "String"
    },
    "Environment": {
      "Description": "The name of the environment we are deploying into: sandbox, stage, or production.",
      "Type": "String",
      "AllowedValues": [
        "sandbox",
        "stage",
        "prod",
        "admin"
      ],
      "Default": "sandbox",
      "ConstraintDescription": "Must be one of these types of VPCs"
    },
    "PrivateSubnetAZ1Cidr": {
      "Description": "The CIDR for the Private Subnet in Availability Zone 1.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "AllowedPattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "PrivateSubnetAZ2Cidr": {
      "Description": "The CIDR for the Private Subnet in Availability Zone 2.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "AllowedPattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "PrivateSubnetAZ3Cidr": {
      "Description": "The CIDR for the Private Subnet in Availability Zone 3.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "19",
      "AllowedPattern": "^([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5])).([0-9]|[1-9][0-9]|1[0-9]{2}|2([0-4][0-9]|5[0-5]))/([0-9]|[12][0-9]|3[0-2])",
      "ConstraintDescription": "Must be a valid IP CIDR range of the form x.x.x.x/x"
    },
    "SSHKeyName": {
      "Description": "Name of an existing EC2 SSH KeyPair to install on the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
    },
    "PublicSubnetAZ1": {
      "Description": "The ID of the Public Subnet in Availability Zone 1.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnetAZ2": {
      "Description": "The ID of the Public Subnet in Availability Zone 2.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "PublicSubnetAZ3": {
      "Description": "The ID of the Public Subnet in Availability Zone 3.",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "InternetAccessSecurityGroup": {
      "Description": "Security group FROM which we allow traffic TO the NAT instances.",
      "Type": "AWS::EC2::SecurityGroup::Id"
    },
    "StacksVersion": {
      "Description": "Version of the Nubis Stacks",
      "Type": "String",
      "Default": "v1.0.1"
    }
  },
  "Mappings": {
    "AWSNATAMI": {
      "us-east-1": {
        "AMI": "ami-c6699baf"
      },
      "us-west-2": {
        "AMI": "ami-52ff7262"
      }
    }
  },
  "Resources": {
    "PrivateSubnetAZ1": {
      "Type": "AWS::EC2::Subnet",
      "Metadata": {
        "update_key": "0002"
      },
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetAZ1Cidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnetAZ1"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "1",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetAZ2Cidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnetAZ2"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            "2",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetAZ3Cidr"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnetAZ3"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PrivateRouteTableAZ1": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnet1AZRouteTable"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PrivateRouteTableAZ2": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnet2AZRouteTable"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PrivateRouteTableAZ3": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "VpcId"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "PrivateSubnet3AZRouteTable"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "PrivateSubnetAZ1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetAZ1"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableAZ1"
        }
      }
    },
    "PrivateSubnetAZ2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetAZ2"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableAZ2"
        }
      }
    },
    "PrivateSubnetAZ3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnetAZ3"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTableAZ3"
        }
      }
    },
    "PrivateRouteAZ1": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTableAZ1"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "NatInstanceAZ1"
        }
      }
    },
    "PrivateRouteAZ2": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTableAZ2"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "NatInstanceAZ2"
        }
      }
    },
    "PrivateRouteAZ3": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTableAZ3"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "InstanceId": {
          "Ref": "NatInstanceAZ3"
        }
      }
    },
    "NatSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "NAT Security Group",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupId": {
              "Ref": "InternetAccessSecurityGroup"
            }
          },
          {
            "IpProtocol": "udp",
            "FromPort": "0",
            "ToPort": "65535",
            "SourceSecurityGroupId": {
              "Ref": "InternetAccessSecurityGroup"
            }
          },
          {
            "IpProtocol": "icmp",
            "FromPort": "8",
            "ToPort": "-1",
            "SourceSecurityGroupId": {
              "Ref": "InternetAccessSecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NATSecurityGroup"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": "Netops"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "NatInstanceEipAZ1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "NatInstanceAZ1"
        }
      }
    },
    "NatInstanceAZ1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "AWSNATAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "NatSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "PublicSubnetAZ1"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NatInstanceAZ1"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "NatInstanceEipAZ2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "NatInstanceAZ2"
        }
      }
    },
    "NatInstanceAZ2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "AWSNATAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "NatSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "PublicSubnetAZ2"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NatInstanceAZ2"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "NatInstanceEipAZ3": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": {
          "Ref": "NatInstanceAZ3"
        }
      }
    },
    "NatInstanceAZ3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "SourceDestCheck": "false",
        "ImageId": {
          "Fn::FindInMap": [
            "AWSNATAMI",
            {
              "Ref": "AWS::Region"
            },
            "AMI"
          ]
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "NatSecurityGroup"
              }
            ],
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "DeleteOnTermination": "true",
            "SubnetId": {
              "Ref": "PublicSubnetAZ3"
            }
          }
        ],
        "Tags": [
          {
            "Key": "Name",
            "Value": "NatInstanceAZ3"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "PrivateRouteTableAZ1": {
      "Value": {
        "Ref": "PrivateRouteTableAZ1"
      }
    },
    "PrivateRouteTableAZ2": {
      "Value": {
        "Ref": "PrivateRouteTableAZ2"
      }
    },
    "PrivateRouteTableAZ3": {
      "Value": {
        "Ref": "PrivateRouteTableAZ3"
      }
    },
    "PrivateSubnetAZ1": {
      "Value": {
        "Ref": "PrivateSubnetAZ1"
      }
    },
    "PrivateSubnetAZ2": {
      "Value": {
        "Ref": "PrivateSubnetAZ2"
      }
    },
    "PrivateSubnetAZ3": {
      "Value": {
        "Ref": "PrivateSubnetAZ3"
      }
    },
    "PrivateAvailabilityZone1": {
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnetAZ1",
          "AvailabilityZone"
        ]
      }
    },
    "PrivateAvailabilityZone2": {
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnetAZ2",
          "AvailabilityZone"
        ]
      }
    },
    "PrivateAvailabilityZone3": {
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnetAZ3",
          "AvailabilityZone"
        ]
      }
    },
    "NatSecurityGroup": {
      "Value": {
        "Ref": "NatSecurityGroup"
      }
    },
    "NatInstanceAddressAZ1": {
      "Value": {
        "Ref": "NatInstanceEipAZ1"
      }
    },
    "NatInstanceAddressAZ2": {
      "Value": {
        "Ref": "NatInstanceEipAZ2"
      }
    },
    "NatInstanceAddressAZ3": {
      "Value": {
        "Ref": "NatInstanceEipAZ3"
      }
    }
  }
}
