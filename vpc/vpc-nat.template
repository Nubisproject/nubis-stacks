{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "NAT instance with autoscaling for nubis VPCs.",
  "Parameters": {
    "StackName": {
      "Description": "Name of the parent stack",
      "AllowedPattern": "^[a-zA-Z][a-zA-Z0-9-]{0,254}$",
      "ConstraintDescription": "A stack name can contain only alphanumeric characters (case sensitive) and hyphens. It must start with an alphabetic character and cannot be longer than 255 characters.",
      "Type": "String"
    },
    "ServiceName": {
      "Description": "Name of the service",
      "Type": "String"
    },
    "VPCServiceName": {
      "Description": "Name of the account",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "Purpose": {
      "Description": "Purpose of the instances",
      "Type": "String",
      "Default": "NatInstance"
    },
    "StacksVersion": {
      "Description": "Version of Nubis Stacks to use",
      "Type": "String",
      "Default": "v1.1.0"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "admin",
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify admin, prod, stage, or sandbox."
    },
    "SSHKeyName": {
      "Description": "Existing ssh key to deploy to EC2 instances",
      "Type": "String"
    },
    "NatSecurityGroup": {
      "Description": "Security group ID for NAT instance",
      "Type": "String"
    },
    "CredstashPolicyArn": {
      "Description": "The ARN of the credstash IAM policy",
      "Type": "String"
    },
    "SshSecurityGroupId": {
      "Description": "ID of the ssh security group",
      "Type": "String"
    },
    "InternetAccessSecurityGroupId": {
      "Description": "ID of the internet access security group",
      "Type": "String"
    },
    "SharedServicesSecurityGroupId": {
      "Description": "ID of the shared services security group",
      "Type": "String"
    },
    "NubisDomain": {
      "Description": "The domain used for DHCP Search.",
      "Default": "nubis.allizom.org",
      "AllowedPattern": "^[0-9a-z\\-\\.]+$",
      "Type": "String"
    },
    "PublicSubnetAZ1": {
      "Description": "The first availability zone we are deploying into",
      "Type": "String"
    },
    "PublicSubnetAZ2": {
      "Description": "The second availability zone we are deploying into",
      "Type": "String"
    },
    "PublicSubnetAZ3": {
      "Description": "The third availability zone we are deploying into",
      "Type": "String"
    },
    "Migrate": {
      "Description": "Set the migrate flag to 1 or 0",
      "Type": "String",
      "AllowedValues": [
        0,
        1
      ],
      "Default": "1"
    }
  },
  "Mappings": {
    "AMIs": {
      "us-east-1": {
        "AMIs": "Builder aws_amazon_linux_ebs is using nubis-base v1.1.0 ebs amazon-linux (ami-ed22d48d) nubis-nat"
      },
      "us-west-2": {
        "AMIs": "Builder aws_amazon_linux_ebs is using nubis-base v1.1.0 ebs amazon-linux (ami-ed22d48d) nubis-nat"
      }
    },
    "InstanceTypeMap": {
      "prod": {
        "InstanceType": "m3.medium"
      },
      "stage": {
        "InstanceType": "m3.medium"
      },
      "sandbox": {
        "InstanceType": "t2.small"
      },
      "admin": {
        "InstanceType": "t2.small"
      }
    }
  },
  "Resources": {
    "AutoScalingGroupPublic": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": "true"
        },
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "false"
        }
      },
      "Properties": {
        "VPCZoneIdentifier": [
          {
            "Ref": "PublicSubnetAZ1"
          },
          {
            "Ref": "PublicSubnetAZ2"
          },
          {
            "Ref": "PublicSubnetAZ3"
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "DesiredCapacity": "1",
        "MaxSize": "2",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "ServiceName"
                  },
                  " [",
                  {
                    "Ref": "Purpose"
                  },
                  "] (",
                  {
                    "Ref": "Environment"
                  },
                  ")"
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Purpose",
            "Value": {
              "Ref": "Purpose"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Backups",
            "Value": "Nightly",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Shutdown",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": "true",
        "ImageId": {
          "Fn::FindInMap": [
            "AMIs",
            {
              "Ref": "AWS::Region"
            },
            "AMIs"
          ]
        },
        "SecurityGroups": [
          {
            "Ref": "NatSecurityGroup"
          },
          {
            "Ref": "InternetAccessSecurityGroupId"
          },
          {
            "Ref": "SharedServicesSecurityGroupId"
          },
          {
            "Ref": "SshSecurityGroupId"
          }
        ],
        "InstanceType": {
          "Fn::FindInMap": [
            "InstanceTypeMap",
            {
              "Ref": "Environment"
            },
            "InstanceType"
          ]
        },
        "KeyName": {
          "Ref": "SSHKeyName"
        },
        "IamInstanceProfile": {
          "Ref": "Ec2IamInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_STACK='",
                      {
                        "Ref": "AWS::StackName"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_PROJECT='",
                      {
                        "Ref": "ServiceName"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_ENVIRONMENT='",
                      {
                        "Ref": "Environment"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_DOMAIN='",
                      {
                        "Ref": "NubisDomain"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_MIGRATE='",
                      {
                        "Ref": "Migrate"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_ACCOUNT='",
                      {
                        "Ref": "VPCServiceName"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_PURPOSE='",
                      {
                        "Ref": "Purpose"
                      },
                      "'"
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "Ec2IamInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "IamRole"
          }
        ]
      }
    },
    "EipAZ1": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "EipAZ2": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "EipAZ3": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "IamRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          {
            "Ref": "CredstashPolicyArn"
          }
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "IamPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::StackName"
              },
              "iam",
              "policy"
            ]
          ]
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "EniAttach",
              "Effect": "Allow",
              "Action": [
                "ec2:AttachNetworkInterface",
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DetachNetworkInterface"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Sid": "ModifyInterfaceAttribute",
              "Effect": "Allow",
              "Action": [
                "ec2:ModifyNetworkInterfaceAttribute",
                "ec2:DescribeNetworkInterfaces"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Sid": "EipAttach",
              "Effect": "Allow",
              "Action": [
                "cloudformation:DescribeStackResources",
                "cloudformation:DescribeStacks",
                "ec2:DescribeAvailabilityZones",
                "ec2:AssociateAddress",
                "ec2:DisassociateAddress"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Sid": "NATConfigure",
              "Effect": "Allow",
              "Action": [
                "ec2:DescribeRouteTables",
                "ec2:ReplaceRoute",
                "ec2:DescribeSubnets",
                "ec2:DescribeNetworkAcls",
                "ec2:CreateNetworkAclEntry",
                "ec2:DeleteNetworkAclEntry",
                "ec2:ReplaceNetworkAclEntry"
              ],
              "Resource": [
                "*"
              ]
            },
            {
              "Resource": [
                "arn:aws:s3:::nsm-data"
              ],
              "Action": [
                "s3:ListBucket",
                "s3:GetBucketLocation"
              ],
              "Sid": "ListNSMFiles",
              "Effect": "Allow"
            },
            {
              "Resource": [
                "arn:aws:s3:::nsm-data/*"
              ],
              "Action": [
                "s3:GetObject"
              ],
              "Sid": "GetNSMFiles",
              "Effect": "Allow"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "IamRole"
          }
        ]
      }
    }
  },
  "Outputs": {
    "EipAz1": {
      "Description": "EIP ID AZ1",
      "Value": {
        "Fn::GetAtt": [
          "EipAZ1",
          "AllocationId"
        ]
      }
    },
    "EipAz2": {
      "Description": "EIP ID AZ2",
      "Value": {
        "Fn::GetAtt": [
          "EipAZ2",
          "AllocationId"
        ]
      }
    },
    "EipAz3": {
      "Description": "EIP ID AZ3",
      "Value": {
        "Fn::GetAtt": [
          "EipAZ3",
          "AllocationId"
        ]
      }
    },
    "NatInstanceAddressAZ1": {
      "Description": "Nat IP AZ1",
      "Value": {
        "Ref": "EipAZ1"
      }
    },
    "NatInstanceAddressAZ2": {
      "Description": "Nat IP AZ2",
      "Value": {
        "Ref": "EipAZ2"
      }
    },
    "NatInstanceAddressAZ3": {
      "Description": "Nat IP AZ3",
      "Value": {
        "Ref": "EipAZ3"
      }
    }
  }
}
