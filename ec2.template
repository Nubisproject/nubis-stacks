{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "EC2 Stack with; SecurityGroup, LaunchConfiguration and AutoScalingGroup",
  "Parameters": {
    "ProjectName": {
      "Description": "Name of this deployment",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "prod",
        "dev",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, dev, or sandbox."
    },
    "VpcId": {
      "Description": "Id of the VPC",
      "Type": "String"
    },
    "Subnets": {
      "Description": "Coma, seperated, list, of, subnets",
      "Type": "CommaDelimitedList"
    },
    "AmiId": {
      "Description": "The id of the ami for this region",
      "Type": "String"
    },
    "KeyName": {
      "Description": "Existing ssh key to deploy to instances",
      "Type": "String"
    },
    "NubisDomain": {
      "Description": "The domain used to discover the consul endpoint",
      "Default": "nubis.allizom.org",
      "Type": "String"
    },
    "InstanceType": {
      "Description": "EC2 Instance type",
      "Type": "String",
      "NoEcho": "true"
    },
    "ELB": {
      "Description": "ELB Endpoint",
      "Type": "String"
    }
  },
  "Resources": {
    "EC2SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inbound traffic rules",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "0",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8300",
            "ToPort": "8303",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "8300",
            "ToPort": "8303",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ProjectName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Web Server Security Group"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "ImageId": {
          "Ref": "AmiId"
        },
        "SecurityGroups": [
          {
            "Ref": "EC2SecurityGroup"
          },
          "sg-e8efef8d",
          "sg-e9efef8c"
        ],
        "InstanceType": {
            "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_PROJECT='",
                      {
                        "Ref": "ProjectName"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_ENVIRONMENT='",
                      {
                        "Ref": "Environment"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_DOMAIN='",
                      {
                        "Ref": "NubisDomain"
                      },
                      "'"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "NUBIS_MIGRATE='",
                      "1",
                      "'"
                    ]
                  ]
                }
              ]
            ]
          }
        }
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "UpdatePolicy": {
        "AutoScalingScheduledAction": {
          "IgnoreUnmodifiedGroupSizeProperties": "true"
        },
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "WaitOnResourceSignals": "false",
          "PauseTime": "PT1M"
        }
      },
      "Properties": {
        "AvailabilityZones": {
          "Fn::GetAZs": ""
        },
        "VPCZoneIdentifier": [
          {
            "Fn::Select": [
              "0",
              {
                "Ref": "Subnets"
              }
            ]
          },
          {
            "Fn::Select": [
              "1",
              {
                "Ref": "Subnets"
              }
            ]
          },
          {
            "Fn::Select": [
              "2",
              {
                "Ref": "Subnets"
              }
            ]
          }
        ],
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": "1",
        "DesiredCapacity": "1",
        "MaxSize": "2",
        "LoadBalancerNames": [
          {
            "Ref": "ELB"
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ProjectName"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Purpose",
            "Value": "Web Server",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Backups",
            "Value": "Nightly",
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Shutdown",
            "Value": "Never",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  },
  "Outputs": {
    "EC2SecurityGroup": {
      "Description": "EC2SecurityGroup Id",
      "Value": {
        "Ref": "EC2SecurityGroup"
      }
    },
    "GroupId": {
      "Description": "EC2SecurityGroup Group Id",
      "Value": {
        "Fn::GetAtt": [
          "EC2SecurityGroup",
          "GroupId"
        ]
      }
    }
  }
}