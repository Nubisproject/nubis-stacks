{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Memcache Stack with; CacheCluster, SecurityGroup and SubnetGroup",
  "Parameters": {
    "ServiceName": {
      "Description": "The name of the service this belongs to",
      "AllowedPattern": "^[a-z0-9][a-z0-9-.]*$",
      "Type": "String"
    },
    "TechnicalOwner": {
      "Description": "A valid LDAP email",
      "AllowedPattern": "^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$",
      "Type": "String"
    },
    "Environment": {
      "Description": "Environment we are deploying into",
      "Default": "sandbox",
      "Type": "String",
      "AllowedValues": [
        "prod",
        "stage",
        "sandbox"
      ],
      "ConstraintDescription": "Must specify prod, stage, or sandbox."
    },
    "EC2SecurityGroup": {
      "Description": "EC2SecurityGroup id",
      "AllowedPattern": "^sg-[0-9a-f]{8}$",
      "Type": "String"
    }
  },
  "Resources": {
    "VpcInfo": {
      "Type": "Custom::VpcInfo",
      "Properties": {
        "ServiceToken": {
          "Fn::Join": [
            "",
            [
              "arn:aws:lambda:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":function:",
              "LookupNestedStackOutputs"
            ]
          ]
        },
        "StackName": {
          "Fn::Join": [
            "-",
            [
              {
                "Ref": "AWS::Region"
              },
              "vpc"
            ]
          ]
        },
        "Environment": {
          "Ref": "Environment"
        }
      }
    },
    "ElastiCacheSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Inbound ElastiCache traffic rules",
        "VpcId": {
          "Fn::GetAtt": [
            "VpcInfo",
            "VpcId"
          ]
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "11211",
            "ToPort": "11211",
            "SourceSecurityGroupId": {
              "Ref": "EC2SecurityGroup"
            }
          }
        ],
        "Tags": [
          {
            "Key": "ServiceName",
            "Value": {
              "Ref": "ServiceName"
            }
          },
          {
            "Key": "TechnicalOwner",
            "Value": {
              "Ref": "TechnicalOwner"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Purpose",
            "Value": "Elasticache Security Group"
          },
          {
            "Key": "Backups",
            "Value": "Nightly"
          },
          {
            "Key": "Shutdown",
            "Value": "Never"
          }
        ]
      }
    },
    "ElastiCacheSubnetGroup": {
      "Type": "AWS::ElastiCache::SubnetGroup",
      "Properties": {
        "Description": "ElastiCache Subnet Group",
        "SubnetIds": [
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ1"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ2"
            ]
          },
          {
            "Fn::GetAtt": [
              "VpcInfo",
              "PrivateSubnetAZ3"
            ]
          }
        ]
      }
    },
    "ElastiCache": {
      "Type": "AWS::ElastiCache::CacheCluster",
      "Properties": {
        "CacheNodeType": "cache.m3.medium",
        "Engine": "memcached",
        "EngineVersion": "1.4.14",
        "NumCacheNodes": "1",
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "ElastiCacheSecurityGroup",
              "GroupId"
            ]
          }
        ],
        "CacheSubnetGroupName": {
          "Ref": "ElastiCacheSubnetGroup"
        }
      }
    }
  },
  "Outputs": {
    "Endpoint": {
      "Description": "Endpoint Address",
      "Value": {
        "Fn::GetAtt": [
          "ElastiCache",
          "ConfigurationEndpoint.Address"
        ]
      }
    },
    "Port": {
      "Description": "Endpoint Port",
      "Value": {
        "Fn::GetAtt": [
          "ElastiCache",
          "ConfigurationEndpoint.Port"
        ]
      }
    }
  }
}
